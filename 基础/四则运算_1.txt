using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace Test0001
{
    class Program
    {
        static int Main(string[] args)
        {
            string[] input = Console.ReadLine().Split(' ', '/');
            int a1 = int.Parse(input[0]);
            int a2 = int.Parse(input[1]);
            int b1 = int.Parse(input[2]);
            int b2 = int.Parse(input[3]);
            Add(a1, a2, b1, b2);
            Sub(a1, a2, b1, b2);
            Mul(a1, a2, b1, b2);
            Div(a1, a2, b1, b2);
            return 0;
        }
       
        static string AddBrackets(int num)
        {
            if (num < 0)
            {
                return "(" + num + ")";
            }
            return num.ToString();
        }

        static string AddBrackets(int num,int toNum)
        {
            if (toNum < 0)
            {
                return "(-" + num + ")";
            }
            return num.ToString();
        }


        /// <summary>
        /// 化简
        /// </summary>
        /// <param name="a">被除数</param>
        /// <param name="b">除数</param>
        /// <returns></returns>
        static void Simplification(ref int a,ref int b)
        {
            if (b == 0||a==0||a==b) return;
            if (a < 0 && b < 0)
            {
                a = -a;
                b = -b;
            }
            if (a == -1||b==-1||a==1||b==1) return ;
            int a0 = Math.Abs(a);
            int b0 = Math.Abs(b);

            int min = a0 > b0 ? b0 : a0;
            for (int i = 2; i <= min; i++)
            {
                if (a0 % i == 0 && b0 % i == 0)//如果都能被整除
                {
                    a0 /= i;
                    b0 /= i;
                    min /= i;
                    i = 2;
                }
            }
            a = a < 0 ? -a0 : a0;
            b = b < 0 ? -b0 : b0;
        }
     
        /// <summary>
        /// 分子有理化
        /// </summary>
        /// <param name="a">被除数</param>
        /// <param name="b">除数</param>
        /// <returns></returns>
        static string Rational(int a, int b)
        {
            if (b == 0) return "Inf";
            if (a == 0) return "0";
            if (a == b) return "1";
            if (a == -1) return "(-1)/" + b;
            if (b == -1) return AddBrackets(-a);
            if (a == 1) return "1/" + AddBrackets(b);
            if (b == 1) return AddBrackets(a);
            int a0 = Math.Abs(a);
            int b0 = Math.Abs(b);

            if (a0 < b0) return AddBrackets(a) + "/" + AddBrackets(b);
            int chu = a0 / b0;
            a0 %= b0;
            return chu +" " + AddBrackets(a0,a) + "/" + AddBrackets(b0, b);
        }


        static void Add(int a1,int a2,int b1,int b2)
        {
            Simplification(ref a1, ref a2);
            Simplification(ref b1, ref b2);
            string str1 = Rational(a1, a2);
            string str2 = Rational(b1, b2);
            int c1 = a1 * b2 + b1 * a2;
            int c2 = a2 * b2;
            Simplification(ref c1, ref c2);
            string str3 = Rational(c1, c2);
            Console.WriteLine(str1 + " + " + str2 + " = " + str3);
        }
        static void Sub(int a1, int a2, int b1, int b2)
        {
            Simplification(ref a1, ref a2);
            Simplification(ref b1, ref b2);
            string str1 = Rational(a1, a2);
            string str2 = Rational(b1, b2);
            int c1 = a1 * b2 - b1 * a2;
            int c2 = a2 * b2;
            Simplification(ref c1, ref c2);
            string str3 = Rational(c1, c2);
            Console.WriteLine(str1 + " - " + str2 + " = " + str3);
        }
        static void Mul(int a1, int a2, int b1, int b2)
        {
            Simplification(ref a1, ref a2);
            Simplification(ref b1, ref b2);
            string str1 = Rational(a1, a2);
            string str2 = Rational(b1, b2);
            int c1 = a1 * b1;
            int c2 = a2 * b2;
            Simplification(ref c1, ref c2);
            string str3 = Rational(c1, c2);
            Console.WriteLine(str1 + " * " + str2 + " = " + str3);
        }

        static void Div(int a1, int a2, int b1, int b2)
        {
            Simplification(ref a1, ref a2);
            Simplification(ref b1, ref b2);
            string str1 = Rational(a1, a2);
            string str2 = Rational(b1, b2);
            int c1 = a1 * b2;
            int c2 = a2 * b1;
            Simplification(ref c1, ref c2);
            string str3 = Rational(c1, c2);
            Console.WriteLine(str1 + " / " + str2 + " = " + str3);
        }

    }
}