using System;
using System.Collections.Generic;
using System.Linq;

namespace Test0001
{
    class Program
    {
        static int Main(string[] args)
        {
            string[] input = Console.ReadLine().Split(' ');
            int kind = int.Parse(input[0]);//月饼种类
            int demand = int.Parse(input[1]);//需求量

            List<Mooncake> mooncakes = new List<Mooncake>();

            string[] ku = Console.ReadLine().Split(' ');//所有售价
            string[] sell = Console.ReadLine().Split(' ');//所有售价
            decimal Profit = 0;//利润
            for (int i = 0; i < kind; i++)
            {
                int inventory = int.Parse(ku[i]);
                int price = int.Parse(sell[i]);
                if (inventory == 0)
                {
                    Profit += price;
                }
                else
                {
                    mooncakes.Add(new Mooncake(inventory, price));
                }
            }
            mooncakes = mooncakes.OrderByDescending(x => x.price).ToList();
            foreach (Mooncake mooncake in mooncakes)
            {
                if (demand > mooncake.inventory)
                {
                    Profit += mooncake.totalPrice;
                    demand -= mooncake.inventory;
                }
                else
                {
                    Profit += (demand * ((decimal)mooncake.totalPrice / mooncake.inventory));
                    break;
                }
            }
            Console.WriteLine(Profit.ToString("f2"));
            return 0;
        }
    }
    class Mooncake
    {
        public int inventory;//库存
        public int totalPrice;//售价
        public decimal price;//单价
        public Mooncake(int inventory, int totalPrice)
        {
            this.inventory = inventory;
            this.totalPrice = totalPrice;
            this.price = (decimal)totalPrice / inventory;
        }
    }
}