using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Test0001
{
    class Program
    {
        public static int[] a;
        public static int S = 0;
        public static int M = 0;
        public static void Main(string[] args)
        {
            int[] str1 = Console.ReadLine().Split(' ').Select(x=>int.Parse(x)).ToArray();
            int N = str1[0];
            a = new int[N];
            //题目要求每次和0进行交换 ,只要0的位置不对就得换,并且所有无序数都变得有序即可
            for (int i = 0; i < N; i++)
            {
                a[str1[i + 1]] = i;
                if (str1[i + 1] != 0 && i != str1[i+1]) M++;//记录除0以外无序个数
            }
            int k = 1; //k为最小的那个无序数
            while (M != 0)//除非全部有序否则继续循环
            {
                if (a[0] == 0)   //若0在0号位，则找一个无序数与之交换，使之可以继续每一步就通过交换令一个数有序
                {
                    for (; k < N; k++)
                    {
                        if (a[k] != k)
                        {
                            Swap(a[0], a[k]);
                            S++;
                            break;
                        }
                    }
                }
                while (a[0] != 0) //若0不在0号位，将0所在位置的数的当前位置与0的当前位置交换  
                {
                    Swap(a[a[0]], a[0]); //把0的位置的应该是0的位置进行交换
                    S++;
                    M--;//无序个数减少
                }
            }
            Console.WriteLine(S);
        }
        static void Swap(int x , int y)
        {
            int t = a[x];
            a[x] = a[y];
            a[y] = t;
        }
    }
}